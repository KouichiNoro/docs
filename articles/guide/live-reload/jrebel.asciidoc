---
title: Live Reload With JRebel
tab-title: JRebel
order: 20
---

= Live Reload With JRebel

https://www.jrebel.com/products/jrebel[JRebel] is a commercial developer-productivity tool for automatic, real-time update of Java code in a running application.
Vaadin detects the JRebel Agent and automatically reloads the application in the browser after the Java changes have been hotpatched.

== Step-by-Step Guide

. Set up and activate JRebel in your IDE by following the Quick Start guides available at https://www.jrebel.com/products/jrebel/learn. Use at least version `2020.2.1`, which contains built-in Live Reload integration.
. Run or debug your Vaadin application using the JRebel Agent.
. Navigate to your Vaadin application in the browser, make and save some changes, and the browser will reload automatically.

== Additional Configuration

* When using the Jetty Maven plugin together with JRebel, ensure that automatic restart is disabled (omit `<scanIntervalSeconds>` or set it to a value of  `0` or less).

== Current Limitations

* Since the server does not restart, modifications to startup listeners and code that connects front-end and backend components, such as adding a new `LitTemplate` class, are not reflected.
However, modifications to routes are picked up.
* With <<{articles}/flow/advanced/preserving-state-on-refresh#,`@PreserveOnRefresh`>>, view instances are reused when reloaded in the browser.
Hence, hotpatched changes to the view constructor will not be reflected until the view is opened in another browser window or tab.
